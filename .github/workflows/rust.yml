name: Rust

env:
  CARGO_TERM_COLOR: always

on:
  push:
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
      - '.gitignore'
  pull_request:
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
      - '.gitignore'

jobs:
  os-check:
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest]
    steps:
      - uses: actions/checkout@v5
      - name: Create lockfile
        run: cargo update
      - uses: Swatinem/rust-cache@v2
      - name: cargo check
        run: cargo check --all-features --workspace

  check:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v5
    - name: Create lockfile
      run: cargo update
    - uses: Swatinem/rust-cache@v2
    - name: Run check
      run: |
        cargo clippy --all --no-deps
        cargo fmt --all -- --check

  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v5
    - name: Install latest nightly
      run: |
        rustup toolchain install nightly --component miri --profile minimal --no-self-update
        rustup override set nightly
    - name: Create lockfile
      run: cargo update
    - uses: Swatinem/rust-cache@v2
    - name: Cache Docker images
      uses: ScribeMD/docker-cache@0.5.0
      with:
        key: docker-${{ runner.os }}-${{ hashFiles('testfiles/**') }}
    - name: Run tests
      run: ./run_test.sh
